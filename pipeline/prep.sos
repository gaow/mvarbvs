#!/usr/bin/env sos-runner
#fileformat=SOS1.0

%include ResourceManagement as RM
%include Misc as MC
%include DataWrestling as DW
[global]

#
# Auxiliary steps
#

[download]
# Resource preparation
sos_run('RM.plink', workdir = CONFIG['wd'])
sos_run('RM.minimac3', workdir = CONFIG['wd'])
sos_run('RM.vcftools', workdir = CONFIG['wd'])
sos_run('RM.peer', workdir = CONFIG['wd'])
sos_run('RM.king', workdir = CONFIG['wd'])


#
# Workhorse
#

[data_summary]
input: CONFIG['genotype']
sos_run("MC.genotype_stats", workdir = CONFIG['wd'])

[genotype_preprocessing]
input: CONFIG['genotype']
sos_run("DW.vcf_by_chrom", workdir = CONFIG['wd'])

[rna_preprocessing]
input: CONFIG['rna_rpkm'], CONFIG['rna_cnts'], CONFIG['genotype'], CONFIG['sample_attr'] 
sos_run("MC.rnaseq", workdir =  CONFIG['wd'])

[pca_plot_broad]
input: '/tmp/GTExPCA.ped'
sos_run("MC.global_ancestry:2", workdir = '/tmp')

[genotype_pca_broad]
parameter: project_name = "GTEx7.dbGaP"
input: CONFIG['genotype']
sos_run("DW.vcf_by_chrom+DW.broad_to_plink+MC.LD_pruning+MC.global_ancestry", 
        workdir = CONFIG['wd'],
        project_name = project_name)

[genotype_pca_umich]
parameter: project_name = "GTEx7.Imputed"
input: CONFIG['imputed_genotype']
sos_run("DW.umich_to_plink+MC.LD_pruning+MC.global_ancestry", 
        workdir = CONFIG['wd'],
        project_name = project_name)

[genotype_pca_umich_filtered]
# Filtered imputation data removing imputed sites
input: "{}/GTEx7.Imputed.genotyped.filtered.bed".format(CONFIG['wd'])
sos_run("MC.LD_pruning+MC.global_ancestry", 
        workdir = CONFIG['wd'])

[gene_annotation: provides = "${CONFIG['rna_cnts']!n}.annotation"]
input: "${CONFIG['rna_cnts']}"
output: "${CONFIG['rna_cnts']!n}.annotation"
sos_run("MC.ensembl_annotation", workdir = CONFIG['wd'])

[genotype_formatting]
parameter: original_variants = "{}/GTEx7.dbGaP.bed".format(CONFIG['wd'])
parameter: gene_annotation = "${CONFIG['rna_cnts']!n}.annotation"
depends: original_variants
input: "{}/GTEx7.Imputed.bed".format(CONFIG['wd'])
sos_run("DW.variants_filter+DW.plink_to_hdf5_batch", 
        workdir = CONFIG['wd'], 
        include = original_variants,
        ann = gene_annotation)

[covariate_preparation]
# Covariates are: sex, platform, 3 PC and PEER factors
parameter: peer_factors = glob.glob("{}/*_PEER_covariates.txt".format("${CONFIG['wd']!a}"))
parameter: pc_file = "{}/GTEx7.Imputed.prune.pc.ped".format(CONFIG['wd'])
parameter: attr_file = CONFIG['sample_attr']
parameter: covar_file = CONFIG['phenotype']
parameter: expression_file = CONFIG['expression_db']
sos_run("DW.recode_platform + DW.covariates_to_HDF5",
        workdir = CONFIG['wd'],
        peer_factors = peer_factors,
        pc_file = pc_file,
        attr_file = attr_file,
        covar_file = covar_file,
        output_file = "{}/GTEx7.Imputed.covariates.h5".format(CONFIG['wd']))

[make_toy]
# Create a toy example
sos_run("DW.subset_HDF5_data",
        workdir = CONFIG['wd'],
        ann_file = "${CONFIG['rna_cnts']!n}.annotation",
        geno_file = "{}/GTEx7.Imputed.genotyped.filtered.cis.h5".format(CONFIG['wd']),
        expr_file = "${CONFIG['rna_cnts']!nn}.qnorm.std.h5",
        toy_file = CONFIG['toy_prefix'],
        gene_list = CONFIG['toy_gene_list'])

